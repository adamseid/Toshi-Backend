version: 0.2

phases:
  pre_build:
    commands:
      - echo $ECR_REPO
      - "ECR_REPOSITORY_REGISTRY_ID=$(echo $ECR_REPO | cut -d. -f1)"
      - echo $ECR_REPOSITORY_REGISTRY_ID
      - "ECR_REPOSITORY_SERVER=$(echo $ECR_REPO | cut -d/ -f1)"
      - echo $ECR_REPOSITORY_SERVER
      - "ECR_REPOSITORY_REGION=$(echo $ECR_REPO | cut -d. -f4)"
      - echo $ECR_REPOSITORY_REGION
      - echo Logging in to Amazon ECR...
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - aws ecr get-login-password --region $ECR_REPOSITORY_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_SERVER
  build:
    commands:
      - echo Build started
      - docker build -f Dockerfile -t $ECR_REPO:latest .
      - echo Tagging Docker Image $ECR_REPO:latest with $ECR_REPO:$IMAGE_TAG
      - docker tag $ECR_REPO:latest $ECR_REPO:$IMAGE_TAG
      - echo Pushing Docker Image to $ECR_REPO:latest and $ECR_REPO:$IMAGE_TAG
      - docker push $ECR_REPO:latest
      - docker push $ECR_REPO:$IMAGE_TAG
    finally:
      - echo Done building code
  post_build:
    commands:
      - echo Build completed on `date`
      - echo [{\"name\":\"dms-toshi-backend\",\"imageUri\":\"312493251790.dkr.ecr.us-east-1.amazonaws.com/dms-toshi-backend-latest:latest\"}] > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
